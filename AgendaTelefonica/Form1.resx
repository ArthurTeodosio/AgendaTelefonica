<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIwAAACMCAYAAACuwEE+AAAABGdBTUEAALGPC/xhBQAAF6pJREFUeF7t
        XQtYlNXWDtC832+VVlqkpScr7WhmHkmrE1qd6vzon4aaFpVlv1nZyScT85ZpUvwIcSxJSTRTSxCCQOIi
        KggKqODlcL+Dw01gkNv+1/vJ/M807mFu3wwz436f533U+mZf17f2Wmuvvb9bBAQEBAQEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE5IXjokWLuvv7+/fbv3//wI4YEBDQ38PDoyf9xun6TwXs
        HQ6Y+NTU1NHnz58fS3+OS0hImHLmzJnlVVVVfzQ3N5e0tLSUa2NNTU3y2bNnN8TExDydkpIyHmWkpaWN
        CQsLG0JlO16vQsCW4TBu3LhbT548OTE/P//F7OzsOeXl5T80NTVVtbW1tRBb2wkwPQmofkdy1FJDwnYg
        KytrXkFBwUvp6elT3N3de1HdQoBsBRMnTux66NCh0SQc/6LJ/F+lUnkRk4uZbgdPEEyhCq2NjY35VYqq
        7xUKxdr4+PjJzs7O3ahJDtdbJmA1cHFx6bJmzZq+tFTMoaVjX0NDQ1Jra2sDJvH6XHIn2lwErpGgnr96
        9erBjIyMudu2bRtI9k9XaqoQns4EJiE4OPiuvLy8ZfR2p5AdUk6TpdImvMm0JIFW2D/UtjNlZWWeEcHB
        o5YtWwatI2BhOJE2cb548eJ/kyaxJiHRRoCa2lpOttQSavsD0IrtfREwIxzCDoaNyM3KWgyNQpPQTORN
        kLUSUtNChve53OzsdyMjIx+gPgk33RxAvCQ2NnZWXV1dJA16PQafwJsUWyAEp5FsrZPJycluixcv7kNd
        FPaNHHBzc3Py8/MbWl1dvZ20Sg7GWm3gbZ1t1KdCMo737t69e5RYpkyEp6dnT1LbLuT5ROCNxAATeANv
        06S+NZPQHI+JiXFF1Lm9+wKGYPPmzX1KCks+IC8DgTaAO9h2RCxTV6+Ul2/YtWvXIBoCsUTpi5UrV/ap
        qKhYQ2Not1qlA16j5dfPy8vrdhoKITQ64Lhu3bpR5eXlPvS21dDgAbxBtWtS35tIaPbv2bNnIiLX7WMj
        oA4MTNjhw1MrKyvDacAQpQW4A3ozEEJTW1ublJCQ8E8y/Hu0D5MA4EHCEh0dPR07wuQD2ZMXZBJJaNqU
        SmV2SkrK3PbUCgGC48GDB6dKwnId3MG7mdnQ0JBDmuYfrq6uYlvBa9OmexQKRTgNjNAsHZDc7jP79++f
        REN280aG4Q2Rgbu93WbhDpTgddIYNVcpFIc2bNgwjIbu5vOetm/f3rusrGwNDUSnekONjY2soKCAnTt3
        jiUnJ7PExESWlJQk/f38+fMsNzeXkYsvPUdt5ZZhKVL9SvKe/u3j43NzxWm2bdvWo7S0dDkNgpIIcAfI
        3IQgkOvK5syZw5ydnVnPnj0ZNY85OjpKfx89ejSbPXs2e++995i/vz/77bff2NmzZ1ldXV1nCs+1SoXi
        S19f3wHXR9P+4RQVHj6tsyO4165dY6Tl2KBBgyQh0UUHBwfp2SlTprClS5ey3bt3sysKRacIDtVZRxrw
        Rbdx426lttk3vL29h5Ba/Y06DnAHxBLEUgPtQU0ymBCeYcOGMRcXF7ZmzRpGRjtrbm62qPDU19efDgwM
        dKb22O/ShABUZWUljFyE/LkDYSmmpaWxRx99lCsQ+hKC07dvXzZt2jT2/fffS0LY1NTErc8MbKutrT2w
        devWwdQWu4RDXFzcbDIec9FZAm8QLMbCwkL28ssvS5NObTOJKKNHjx7s2WefZb///rtk4/DqlJu0rFec
        S0tbaJfbByEhIcNJjf5OHTUp3gK1D/VPyxrUstFLAQ0227dvH7vzzju5QmAsR4wYwb788kuWnZ1tiSWq
        raGhITkiIuIvVLddLU2OeXl5C2gA6zQ6rDcx+LAV/r1jB3N3d5e0w9y5cyUD9OjRo5IRy/tdR6TBZmFh
        YWzjxo3s7bffZh9++CHbsmUL8/LyYqtWrWKvzJvH7rvvPtatWzeucGhjr1692DPPPMOOHz8uCTSvbhnZ
        WF5evglnsKhu+0BiYuIoWoqOUecAXqc7JIQBg+/q6sqGDh36p8np2rUru+eee6RJLy4uNvitxvNYQmjQ
        GdlXkhAh5gINhmULtg7q9vPzY0899RQbOHCgVKd6G3jEMnX//fezI0eOSGXy6paJbWQ3ZVE7p1G9tn+A
        DkdBMjMz51G/jDJ0sewEBwez8ePHMycnJ+7kgDA+3333XZafn88tx1Ri0ktKSiThWbJkiaR5br31Vm5b
        1InnyJthZKByy5WJrdTvTxE5pzptG6TyR1CHrhABXme1UqlUsp9//lnSIFSUTmIpWLFihaQpeOXJQWgk
        aLwzZ86wV199ld1+++3ctqjzjjvukGI+VVVV3DLlILWrISEh4a9Un+1qGSRwk+Qvog4ZfBwEwnIkNJSN
        HTuWOwnaiOAabBBjbBpDWVNTI0WKYa906dKF2x4Vb7vtNklozKlpaEleb9Na5uOPP+5HE59AnQG4neQR
        sQy4pwjNUzEGE57K4cOHjbJn4D2piH/rKgPPXb58WTKasSzy2qPicGoXBMxcNg21pWTHjh2jqC7b9JhI
        bb9IXkIJr3MdEZt+EyZM4A66PoTBOWPGDGlDUV+hgUaDt7Vw0SL29NNPS54YNEJqaqpk/GKStZWF/15W
        ViYZxiNHjuS2ScV7771XEmZzaEBqhzI3O/sdW/WYHEn97qSOGLQcYfDffPNNg11ZTWKJWL9+vbRs8OpR
        JzQa3Ou77rpL8oCw+Yg/YRMNHjxYEl5fX19pFxvlaRMceFuHDh2SNjJ5bQIhzDShLDY2Vms5JhBxmaj5
        rq59qS7bQujB0LuVDcp4dILA6xyXeJNNDdmriLc9JSVF58RAO7z00kvcMtSJ/SNPT09JcOB688qC8EFT
        dWR7QWimTp0qbSXwyjCF1K7/REVFTaF6bMv4raioQPpCrWaHdPHSpUvsgQce4A60oYTb++mnn+pU/zk5
        OXpHfDHZDz/8sBT3wVLFE0YIDVIhOrLBevfuzT777DNk0t3we1NI7Wmurq7+zqa2C9BYciG/og7gVgVu
        x7SRXENpnadiTCYmF9pK17JUVFTEnnzySW4Z2ggDd9asWZIG40VzoYFgq3QUEhg+fLgkWDJHg9uov8Gu
        trQsnTp1agwZkUloPIHXKa1EYEwugQHxliOKy6tLRUzuTz/9xIYMGcItQxthJ02ePFkSDAQYNcuFIR0Q
        EHBDdFpFCPQTTzzBMjMzZbVnSABLyXGYQ3XYxrJUUFDwLDX8qmZH9OHFixdlW5JARFp1CQwmC/GRnTt3
        SpoGIX1sAWBCeWWqE8+gDrjLvF1q7H8tX75c63YCDGx4VzK72q2lpaWrqHzrP9yPYN3lixfdqdFG3d2C
        iXvkkUe4g2soMZkwLvXxlECV4GBZhFeE2Mrjjz8upS7wylfnfaTJfv311xuMYZSJOA1SH3i/A9FfPKP+
        O1NZWly8zibca39//8Ek3Xup0QC3Mx0RA4yEJH3ebl2Ea+737bdGJTWhHXjrEcvZsWOH5ApDG/DqURH2
        Ei3H0m/Vy4KNgv0wBBR5v4NAfvLJJzf8zhRera2NCQkJuY/Kt+4gHuwXGqBqXif05bJly1j37t25g6sv
        YV/MmzdP2ow0dSJgi8C4XbHiA9anTx9ufSA2R6FJ6IW5oQxouXfeeUdrfIkcBcm91/ydsaQ+K8+ePfs0
        lW3ddgwuPKYGG+wdqROGr6EGqDohLIj0nj59Wgrd8+owlCgHtpC3t7e0L6RNAyLY9/7773NtEmirhx56
        iPs7BAixDMqpZcgedKWyrVtgcMM2Y8wkgUFey5gxY7gDq4sQlscee0wSOjkHX0XEdHZ8950kNLz6QXhm
        f/zxxw31Q+hgF2nTns8995ys6Z2kYZ6jcq1aYBySk5MnU2NNSsOE4YnsNyrPIOKth60RExNjFmFRUUmG
        7davvmIDBgzgtgO2zltvvcVNs8C5JmxB8H4H7xAGt+ZvjGVGRsYCqz6P3Z4s9Qo11iSBgZEYGRnZYcIU
        jwimYckwp7CoiNyWjz76SGsSFbYReFoGkd1XXnmFa0BjOcOBOfXnTWFhYaH/xo0b8S0E60RAQED3K1eu
        bKLGAtxO6EMMMvZZXnjhhRsGtSMiF+aXX37hlik30UbYJB3tqn9FWkgz9A+Pbe/evVzjFxoSe1Vy7WST
        HfWfffv23UtlW6endPjw4T40IJHUWIDbCX2JQdu1a9f/H1/Vh/BgNm/ezC3PHETMJSgoSGsbYYdpRnHx
        d6RvaDPqkdwuY5ppc1RU1Fgq1zoFht7u/rScZHAabhQvXLggnS6kovUi3lCE2nlhenMxKytLSk7ntQcG
        OOwpTU8tLy+PTZ8+nfsb5C4jB0f9eRPYFhcXZ70Cc+TIkQE0OLhLl9d4gwkts3btWr0irSpi3wanEHnl
        mYNoI7Qary2wU7CrreliY7sArjfvN8gRltPwjY6OHkflWrXA5PMabizT09MNyr6DlkHwDFd4aBqc5iDq
        UCVf8dqDeJBm8jdc52/IOOc9j+UN+TTqz5tCWxCYAl7DjSWMxM8//5z169ePO8A8QiNt2LBB9lwTbcSG
        KZZCXlsefPBBRo7An56HVsJmJe95bFIin1n9eVN40wkMiLA6ck907eWoE7kmISEhsnkcHRFxI5zC5EV/
        cT2IZjymI4FBKCEiIuJPz5tCqxcY0giyLkkgjMZwGkR973JREYalnNsD2ohlCR6d5hklxGhw5AV7UerP
        Y0n6+uuv//Ss+m8Qg1J/3hRatcDQWwOByeI13FTiLV25ciV3kLURGgmxHDk39bQRyx+0BjYRYYfApYaw
        oN2athQ0Jox5XpuRh4MEcfXnTaB1e0ne3t59qysrIzQaLQuhJaAtDE0Qx77NggULpI1DcxvB0CTISUY7
        MzIyJCHi1Qm3HxuNvPbCrcapSs3fGMPGxsZifP+SyrVOgfH09OyemZm5ihoLcDthCrH246owbSmP2ggj
        GKkFlhAafYg2HDt27AbPCtFf3Bqhb8KXLpaUlByw9m8WOCUmJs6gxprtzl2s/1iasO9C9elNaBokKVmL
        0EDL4JA+dtax840d7jc8PKTNSd7zxvDcuXPL3dzcelP/rRfJyckPUmPNekkzIqVIBdDn2g11QsjwBuMq
        D165liaWWQjIwYMHpY1KmcMAbbQ0/hf127qPm8iRQKUPke/S0QlDbYSnBaHRzL21Q7aRMM6mPlt3AlVa
        WtoYenOMvmlKX2LC4ZVoy0npiBCaDz74QAqoWcPyZA5Sv5ppSfo79de6BSYoKGgYTUQINRrgdkYOYqIx
        4Tg9iFOEVLVBxG9wlwwuCbJHoamvq8sIDw+fQH21WoNXAj50eeHChSXUaLPaMSpiz2jhwoVGHd5HkAze
        k7YjrzbMNuqT19SpU23jrpjc3NyXqM0W+aY0Jhqxj5kzZxqcoQfCcJ4/f77JOShw+bHJiGxB3v+3MNvK
        SkpWU/9s43w1Gb6TaQCR5gDwOiQrITS4vBD7NsYIDbTT888/z5JOndJ77wl1Yg+J1L7kscE9RlARm5DQ
        ePB6EE8x97YEj1RndXZ29uvUN9v4VI7H8x49KxUKf2q8RZYlEBODQ2STJk3ibgLqIpKdIHC43wVut64l
        CrYPdsRxf52mkGKpQ3ARH7U4efKk3MdgdRGH8cNee+015PJat/2iBgcySBHxteh3kLAcYIK0nf3Rh9jL
        QdITMum0CQ2OwcBg1nVFGQR31KhR7IcfftB5vlsuUpul6z6cnZ1t6+ttcXFx48n1PU2dALidMwchNAi7
        m3LlGewaLDOYaCw76uXD1sFl0rqERZ1w/XGrFpLBdGkuU4lsAdK0L1C9NvflNqe6urpA6oTZg3iaVGka
        2BSG5NCoE9oBidrI3sPVZ0g5wPloCJIxbjyEEGfGceTWjHYNriw7tmDBAtv8ANfly5fn0+BUaHTKIoTQ
        YHKQE2PoFoI6ITjI9sNGIZKyYOvwntOHsHVwGwR2s82haajMxqKiorUuLi7dqT7bw1ZPz8G0LHXa12Lx
        JmOvBtl6hhxXMSchcMjRgdHMa7MppP7mBwUE3E/1WHd0VxtwErK0tPRf1BmLL0sq4k3Gobg33njDoLxg
        c7J///7siy++kHtpaqusrPT18vLqT3XYLkJDQ++mScOyBPA6anZCaHCPHZLJTbkVQk7CnuGdvTaBNbGx
        sY9T2bb9meJly5Z1y8nJ8aAONWl00OLEBB04cEA6sG9MgE9Oog34gi2vnUawhVz9daS1+lHZNg8HGpjR
        5O6doo4BvA5bjNjlxkS5ubl1eDmQuYmc3/j4eG4bDWQbLW3ZZKu5ULm2abtoAvfeFeblvUlLAz47zOu0
        RQnbAUYndroRkTUmMmwq4S3xbqoygtfKy8u9Jk6c2JPKtR9ER0fjKtbj1EGA13GLE/tGOFaLq1MtuUQh
        XRRGuAxJXG3Uh3PJyclPULn2oV3U4JR+5sw86mCRRqc7ldA2yNLHsY+ObpWSk7iHGLEYXnsMIbUdm4wf
        2tw2gL7A53Cqq6sPUGctkvqgL+FFYcORtKAUI4Hba65lCtl+uJVTDu3S0NAQ4+PjczeVa3tRXT3hEBgY
        OObq1asn0GECbyA6jYgOY5MQR1mQrmDoyQRdxJ4SthlkSA1tI4HLDQ4O/isS1qhs+wW+Q0Bv8mzqc73a
        AFgVMZk4mUAaUboY2pCNRm2EsKxevVqWXWtq3zXyit5yd3fvRWXbP3x9fQdUVFRsoc5f0xwMayIEB2kO
        WELmzJkjLVXUfIOJlAl4ZGXypDi01NTUBO7fv384lW23S5EmHHbu3DmksrISSVadHtDTRQgOcoeRXYdo
        MXbBcZpS10Yk7CDcv7vpiy8YvSDcsg1kc11dXfDevXtHUvl25xXpgoO3t/eIqqqqX2hCrF5oQHhUSLuE
        1kH6xDfffCO55Dgfhc/c4INe2NVG0hT+GwxoXDakeaGQMaQxaiXbL/bHH3/E4XrbDv+bAMegoKApNAmn
        aDxoXPiDZY2E1oGnA+8KV5DBNoHdg3v5kJEHwxbJVzCkeb83lEqlMic6MvIfNvHBCXMCAxAXF/fP+vr6
        XN5ACUrem4KM3P+ZP38+Ppp109gtWgFrPyUlZX5DQ4PslxHZOiEsly5d+tDzfc+BNFRCWFRYunRp7xMn
        Tswlo+48DZRVBfY6ia20DOVlZmauEMKiBW5ubj0O/vTT38hIDCEbwSo2KjuJzWTgxkdFRb3o4eGBlAUh
        LNrgcotLl/Xr199JxqTB37y2E7bU1daFkDNA5p1k4Aph0QMOfn5+QxVXFF+TprHaiLDchFatqar6Yc+e
        PdgfumldZ2Ph4OPjM+jUqVMLyBjOpAEFuANtB0SaQha55K8FBgbiirGbLignFxxg1yATvra29hfyGCox
        uATeoNsi26hPtfRCHA0NDX0UfUWfr3ddwBQ4enp63paamurReP00pT3YNk2kVTJIq3yMFAW733XuBDjA
        CDx69OiE8vLyr5uamix2O4TMbG1pacmlPvgkJSX9bcSIEdAqYgkyIxxHjhzZ/fTp09Pzc/NXkaGIA/8A
        b3KsiUBlYWHh+rS0tBmkUXC7pRAUC8Jx8eLFfeLj4yeXlJRsbmluriDhQboEwJuwzmAb2kQapUihUHwT
        Fxc3CVmH1HbhAXUiHDEJZAeMzsnKWltfX3+C7Jw8zJXaxFmSAMlvczEZs4nQKNhhbj8zJDSKFcERh9CX
        LFkykN7kv1dXVwfV1NT8RrZOWfsk8iZXLkogKakkby6aGJiakjL39ddfH+Y2ZYqwUawccEudkEk/c+bM
        QWdTU+cWFxd/SlxPE5lIS4QcuTcAo/WmWalUphcVFW2mZXE14igkJGTHSoYsvB7hItsgYC90gQCFhYWN
        xd21+GI8/fl8enr6vOLCwm9p+YD90y4HEtQFQwLZITVlZWW7yWBdSHwhIyNjViaVFR8d/VD7ITIICOoS
        QmJHwGRieQCd4KZv3bp1cGho6Ojo8PBxERERfwHp3w+C+Du+NxQdHj0uIiTkfr8tW4a2370CwVCVIwTk
        JgQmXR8KCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgI6MQtt/wfX5RuEAhCRDMA
        AAAASUVORK5CYII=
</value>
  </data>
</root>